import jwt from 'jsonwebtoken';

export const authenticate = (req, res, next) => {
  const authHeader = req.headers.authorization;

  if (!authHeader || !authHeader.startsWith('Bearer ')) {
    console.log('‚ö†Ô∏è Token no proporcionado o formato incorrecto');
    return res.status(401).json({ message: 'Token no proporcionado' });
  }

  const token = authHeader.split(' ')[1];
  const JWT_SECRET = process.env.JWT_SECRET || '';

  console.log('üß™ Token recibido:', token);
  console.log('üîë JWT_SECRET usado:', JWT_SECRET);

  try {
    const decoded = jwt.verify(token, JWT_SECRET);
    console.log('‚úÖ Token decodificado:', decoded);

    if (!decoded.userId) {
      console.log('‚ùå Token v√°lido pero sin userId');
      return res.status(401).json({ message: 'Token no v√°lido: sin userId' });
    }

    req.userId = decoded.userId;
    next();
  } catch (error) {
    console.error('‚ùå Error al verificar token:', error.message);
    return res.status(401).json({ message: 'Token inv√°lido o expirado' });
  }
};
